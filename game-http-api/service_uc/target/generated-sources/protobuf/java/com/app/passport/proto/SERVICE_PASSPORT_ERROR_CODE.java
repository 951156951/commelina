// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/passport_error_code_constants.proto

package com.app.passport.proto;

/**
 * <pre>
 * 错误码定义
 * </pre>
 *
 * Protobuf enum {@code def.error_code_constants.SERVICE_PASSPORT_ERROR_CODE}
 */
public enum SERVICE_PASSPORT_ERROR_CODE
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 成功
   * </pre>
   *
   * <code>SUCESS = 0;</code>
   */
  SUCESS(0),
  /**
   * <pre>
   * 账号不存在
   * </pre>
   *
   * <code>ACCOUNT_NOT_FOUND = 1;</code>
   */
  ACCOUNT_NOT_FOUND(1),
  /**
   * <pre>
   * 用户不存在
   * </pre>
   *
   * <code>ACCOUNT_MEMBER_NOT_FOUND = 2;</code>
   */
  ACCOUNT_MEMBER_NOT_FOUND(2),
  /**
   * <pre>
   * 密码错误
   * </pre>
   *
   * <code>PASSWORD_VALID_ERROR = 3;</code>
   */
  PASSWORD_VALID_ERROR(3),
  /**
   * <pre>
   * 账号已经存在
   * </pre>
   *
   * <code>ACCOUNT_EXISTS = 4;</code>
   */
  ACCOUNT_EXISTS(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 成功
   * </pre>
   *
   * <code>SUCESS = 0;</code>
   */
  public static final int SUCESS_VALUE = 0;
  /**
   * <pre>
   * 账号不存在
   * </pre>
   *
   * <code>ACCOUNT_NOT_FOUND = 1;</code>
   */
  public static final int ACCOUNT_NOT_FOUND_VALUE = 1;
  /**
   * <pre>
   * 用户不存在
   * </pre>
   *
   * <code>ACCOUNT_MEMBER_NOT_FOUND = 2;</code>
   */
  public static final int ACCOUNT_MEMBER_NOT_FOUND_VALUE = 2;
  /**
   * <pre>
   * 密码错误
   * </pre>
   *
   * <code>PASSWORD_VALID_ERROR = 3;</code>
   */
  public static final int PASSWORD_VALID_ERROR_VALUE = 3;
  /**
   * <pre>
   * 账号已经存在
   * </pre>
   *
   * <code>ACCOUNT_EXISTS = 4;</code>
   */
  public static final int ACCOUNT_EXISTS_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static SERVICE_PASSPORT_ERROR_CODE valueOf(int value) {
    return forNumber(value);
  }

  public static SERVICE_PASSPORT_ERROR_CODE forNumber(int value) {
    switch (value) {
      case 0: return SUCESS;
      case 1: return ACCOUNT_NOT_FOUND;
      case 2: return ACCOUNT_MEMBER_NOT_FOUND;
      case 3: return PASSWORD_VALID_ERROR;
      case 4: return ACCOUNT_EXISTS;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SERVICE_PASSPORT_ERROR_CODE>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SERVICE_PASSPORT_ERROR_CODE> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SERVICE_PASSPORT_ERROR_CODE>() {
          public SERVICE_PASSPORT_ERROR_CODE findValueByNumber(int number) {
            return SERVICE_PASSPORT_ERROR_CODE.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.app.passport.proto.ErrorCodeConstantsDef.getDescriptor().getEnumTypes().get(0);
  }

  private static final SERVICE_PASSPORT_ERROR_CODE[] VALUES = values();

  public static SERVICE_PASSPORT_ERROR_CODE valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SERVICE_PASSPORT_ERROR_CODE(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:def.error_code_constants.SERVICE_PASSPORT_ERROR_CODE)
}

