// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gateway_constants.proto

package com.game.gateway.proto.constants;

/**
 * Protobuf enum {@code com.game.gateway.constants.DOMAIN_CONSTANTS}
 */
public enum DOMAIN_CONSTANTS
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * gateway_constants.proto
   * </pre>
   *
   * <code>GATE_WAY = 0;</code>
   */
  GATE_WAY(0),
  /**
   * <pre>
   * matching_constants.proto
   * </pre>
   *
   * <code>MATCHING = 1;</code>
   */
  MATCHING(1),
  /**
   * <code>GAME_ROOM = 2;</code>
   */
  GAME_ROOM(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * gateway_constants.proto
   * </pre>
   *
   * <code>GATE_WAY = 0;</code>
   */
  public static final int GATE_WAY_VALUE = 0;
  /**
   * <pre>
   * matching_constants.proto
   * </pre>
   *
   * <code>MATCHING = 1;</code>
   */
  public static final int MATCHING_VALUE = 1;
  /**
   * <code>GAME_ROOM = 2;</code>
   */
  public static final int GAME_ROOM_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DOMAIN_CONSTANTS valueOf(int value) {
    return forNumber(value);
  }

  public static DOMAIN_CONSTANTS forNumber(int value) {
    switch (value) {
      case 0: return GATE_WAY;
      case 1: return MATCHING;
      case 2: return GAME_ROOM;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DOMAIN_CONSTANTS>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DOMAIN_CONSTANTS> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DOMAIN_CONSTANTS>() {
          public DOMAIN_CONSTANTS findValueByNumber(int number) {
            return DOMAIN_CONSTANTS.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.game.gateway.proto.constants.ConstantsDef.getDescriptor().getEnumTypes().get(0);
  }

  private static final DOMAIN_CONSTANTS[] VALUES = values();

  public static DOMAIN_CONSTANTS valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DOMAIN_CONSTANTS(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.game.gateway.constants.DOMAIN_CONSTANTS)
}

