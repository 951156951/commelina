syntax = "proto3";

package netty.nio.socket.protocol;

option java_package = "com.commelina.niosocket.proto";
option java_outer_classname = "SocketNettyProtocol";
option java_multiple_files = true;

// niosocket 请求体
message SocketASK {
    // 重定向的域 等于 0 会被认为是 心跳请求
    uint32 forward = 1;
    // 接口域
    uint32 opcode = 2;
    // 接口版本
    string version = 3;
    // 参数 约定结构，json，pb等等
    repeated bytes args = 4;
}

// niosocket 消息
message SocketMessage {
    // 错误码 参考 SERVER_CODE
    SERVER_CODE code = 1;
    // 服务端预定义 消息的域
    uint32 domain = 2;
    // 操作码  code = 1 , opCode 与 请求的 request opcode 保持一致，code = 1 则会新定义操作码
    uint32 opcode = 3;
    // 消息内容 约定字节，如 json , pb
    bytes body = 4;
}

// 系统错误码
enum SERVER_CODE {
    // 心跳
    HEARTBEAT_CODE = 0;
    // 成功响应
    RESONSE_CODE = 1;
    // 通知
    NOTIFY_CODE = 2;
    // 服务端内部错误
    SERVER_ERROR = 3;
}